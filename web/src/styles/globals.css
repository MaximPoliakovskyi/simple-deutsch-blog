/* Tailwind (v4) + plugins */
@import "tailwindcss";
@plugin "@tailwindcss/typography";

/* Make `dark:` utilities activate when `.dark` is on <html> */
@custom-variant dark (&:where(.dark, .dark *));

/* ── Design tokens ────────────────────────────────────────────────────────── */
:root {
  /* Hue/Sat/Light tokens for easy theming with hsl() */
  --brand: 222 47% 11%;
  --fg: 222 22% 12%;
  --muted: 222 8% 45%;
  --bg: 0 0% 100%;
  --radius: 12px;

  /* Accent used for focus rings, etc. */
  --sd-accent: hsl(222 80% 56%);

  /* Spacing scale (optional helpers) */
  --space-1: 0.25rem;
  --space-2: 0.5rem;
  --space-3: 0.75rem;
  --space-4: 1rem;

  /* Back-compat aliases (mapped to new tokens) */
  --sd-bg: hsl(var(--bg));
  --sd-fg: hsl(var(--fg));

  /* Let UA know we support dark + light native controls */
  color-scheme: light dark;
}

/* Flip tokens when `.dark` class is present on <html> */
html.dark {
  --bg: 222 47% 8%;
  --fg: 210 15% 96%;
  --muted: 220 9% 65%;
}

/* ── Base / Globals ───────────────────────────────────────────────────────── */
html,
body {
  height: 100%;
}
body {
  background: hsl(var(--bg));
  color: hsl(var(--fg));
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Accessible focus baseline */
:focus-visible {
  outline: 2px solid var(--sd-accent);
  outline-offset: 2px;
  border-radius: 6px;
}

/* Content container helper */
.container-content {
  margin-inline: auto;
  padding-inline: clamp(1rem, 4vw, 2rem);
  @media (min-width: 40rem) {
    max-width: 65ch;
  }
}

/* ── Typography (Prose) tweaks ───────────────────────────────────────────── */
.prose {
  --tw-prose-images-margin-top: 1.25em;
  --tw-prose-images-margin-bottom: 1.25em;
}
.prose.max-w-none {
  max-width: none;
}
.prose :where(img):not(:where([class~="not-prose"] *)) {
  border-radius: 0.75rem;
  height: auto;
  max-width: 100%;
}
.prose :where(pre code) {
  white-space: pre-wrap;
  overflow-wrap: anywhere;
}
.prose :where(table) {
  display: block;
  max-width: 100%;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  border-radius: var(--radius);
}
.prose :where(blockquote) {
  border-inline-start: 4px solid hsl(var(--muted));
  padding-inline-start: 1em;
  color: hsl(var(--muted));
}
.prose :where(figure, pre, table) {
  border-radius: var(--radius);
}
.prose :where(a):focus-visible {
  outline: 2px solid hsl(var(--brand));
  outline-offset: 2px;
  border-radius: 4px;
}

/* Reduce motion */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* ── WordPress / Gutenberg alignment helpers ──────────────────────────────── */
.prose :where(.alignwide) {
  margin-inline: calc(50% - min(50%, 48rem));
  max-width: 96rem;
  width: auto;
}
.prose :where(.alignfull) {
  width: 100vw;
  max-width: 100vw;
  margin-left: 50%;
  transform: translateX(-50%);
}

/* ── Responsive embeds ───────────────────────────────────────────────────── */
.embed {
  position: relative;
  width: 100%;
  aspect-ratio: 16 / 9;
  background: color-mix(in hsl, hsl(var(--fg)) 8%, transparent);
  border-radius: var(--radius);
}
.embed > iframe,
.embed > video {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  border: 0;
  border-radius: inherit;
}
@supports not (aspect-ratio: 1) {
  .embed {
    padding-bottom: 56.25%;
    height: 0;
  }
}

/* ── Utility polish ──────────────────────────────────────────────────────── */
html,
body {
  background-color: hsl(var(--bg));
}

/* ✅ Next.js-compliant smooth scrolling */
html[data-scroll-behavior="smooth"] {
  scroll-behavior: smooth;
}
@media (prefers-reduced-motion: reduce) {
  html[data-scroll-behavior="smooth"] {
    scroll-behavior: auto;
  }
}

/* Input: remove Safari search halo */
input[type="search"] {
  appearance: none;
  -webkit-appearance: none;
}
input[type="search"]:focus {
  outline: none !important;
  box-shadow: none !important;
}
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

/* ── Preloader styles ───────────────────────────────────────────────────── */
.sd-preloader-hidden {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transition: opacity 500ms ease, visibility 500ms ease;
}

/* Center content precisely in viewport */
#sd-preloader {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 99999;
  /* Background follows theme tokens, solid color (no transparency) */
  background: hsl(var(--bg));
}

/* No spinner — only flipping text */

.sd-preloader-word {
  font-weight: 700;
  font-size: 1.25rem;
  letter-spacing: 0.01em;
  color: hsl(var(--fg));
  transition: opacity 250ms ease, transform 250ms ease;
  text-align: center;
}

/* Flip animation */
.sd-preloader-word {
  backface-visibility: hidden;
  transform-origin: center;
}
.sd-word-flip {
  animation: sd-flip 400ms ease-in-out;
}

@keyframes sd-flip {
  0% { transform: rotateX(0deg); opacity: 1; }
  50% { transform: rotateX(90deg); opacity: 0.2; }
  100% { transform: rotateX(0deg); opacity: 1; }
}

/* Per-letter flip setup */
.sd-preloader-word {
  display: inline-flex;
  gap: 0.02em;
  perspective: 600px;
}
.sd-letter {
  display: inline-block;
  transform-origin: center;
  backface-visibility: hidden;
  transition: transform 360ms ease, opacity 360ms ease;
  will-change: transform, opacity;
}

.sd-letter.flipping {
  transform: rotateX(90deg);
  opacity: 0.2;
}

/* When the letter changes, JS replaces text; to create a flip effect we briefly
   set transform to rotateX(90deg) and fade, then back to 0deg. Since JS updates the
   character at mid-flip, the visual is a flipping letter. The timeouts in the
   component coordinate this. */



.sd-word-fade {
  opacity: 0.2;
  transform: translateY(-6px) scale(0.98);
}


@media (prefers-reduced-motion: reduce) {
  .sd-letter { transition: none !important; }
  .sd-preloader-word { transition: none !important; }
}